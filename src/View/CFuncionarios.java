/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;


import model_Dao.DAOCFuncionario;
import UTIL.Formatador;
import controller.ControllerCFuncionario;
import java.util.ArrayList;
import modelConnection.ConectionFactory;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model_Bean.ModelCFuncionario;



/**
 *
 * @author Edson Come
 */
public class CFuncionarios extends javax.swing.JFrame {
   
    ControllerCFuncionario controllerFuncionario = new ControllerCFuncionario();
    ModelCFuncionario modelCFuncionario = new ModelCFuncionario();
    ArrayList<ModelCFuncionario> listaModelCadastro = new ArrayList<>();
    Formatador formatador = new Formatador();
    String salvarAlterar;
   //int flag = 0;
    
    /**
     * Creates new form Cadastro
     */
    public CFuncionarios() {
        initComponents();
        carregarFuncionario();
        //this.desabilitaHabilita(false);
        //this.limparCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxCargo = new javax.swing.JComboBox<>();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldMorada = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldContactoP = new javax.swing.JTextField();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonCanselar = new javax.swing.JButton();
        jButtonListar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jComboBoxSexo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCOD = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFuncionario = new javax.swing.JTable();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Funcionarios");
        getContentPane().setLayout(null);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Cadastro de Funcionario");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(0, 0, 210, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nome:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 80, 43, 20);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cargo:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 160, 60, 14);

        jComboBoxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "User", "Gerente", "Caixa", "Servente", " " }));
        jComboBoxCargo.setEnabled(false);
        jComboBoxCargo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Gerente(evt);
                Caixa(evt);
                Servente(evt);
            }
        });
        jComboBoxCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCargoActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxCargo);
        jComboBoxCargo.setBounds(170, 160, 90, 20);

        jTextFieldNome.setEnabled(false);
        getContentPane().add(jTextFieldNome);
        jTextFieldNome.setBounds(170, 80, 253, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Sexo:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 120, 50, 14);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Local de Morada:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 210, 90, 14);

        jTextFieldMorada.setEnabled(false);
        getContentPane().add(jTextFieldMorada);
        jTextFieldMorada.setBounds(170, 200, 253, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Contacto Pessoal:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 250, 93, 14);

        jTextFieldContactoP.setEnabled(false);
        jTextFieldContactoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContactoPActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldContactoP);
        jTextFieldContactoP.setBounds(170, 240, 253, 30);

        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.setEnabled(false);
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonConfirmar);
        jButtonConfirmar.setBounds(500, 510, 100, 23);

        jButtonCanselar.setText("Cancelar");
        jButtonCanselar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCanselarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCanselar);
        jButtonCanselar.setBounds(630, 510, 90, 23);

        jButtonListar.setText("Listar");
        jButtonListar.setEnabled(false);
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonListar);
        jButtonListar.setBounds(640, 250, 80, 23);

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonExcluir);
        jButtonExcluir.setBounds(640, 210, 80, 23);

        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEditar);
        jButtonEditar.setBounds(640, 170, 80, 23);

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonNovo);
        jButtonNovo.setBounds(640, 130, 80, 23);

        jComboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Masculino", "Feminino" }));
        jComboBoxSexo.setEnabled(false);
        getContentPane().add(jComboBoxSexo);
        jComboBoxSexo.setBounds(170, 120, 90, 20);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 50, 21, 20);

        jTextFieldCOD.setEnabled(false);
        getContentPane().add(jTextFieldCOD);
        jTextFieldCOD.setBounds(170, 50, 130, 20);

        jTableFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Sexo", "Cargo", "Morada", "Contacto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFuncionarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableFuncionario);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 330, 750, 170);
        getContentPane().add(jTextFieldPesquisar);
        jTextFieldPesquisar.setBounds(439, 30, 190, 30);

        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search_2.png"))); // NOI18N
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPesquisar);
        jButtonPesquisar.setBounds(640, 30, 90, 30);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/CadastroFun.jpg"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(0, 0, 760, 560);

        setSize(new java.awt.Dimension(778, 595));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Gerente(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Gerente
        // TODO add your handling code here:
    }//GEN-LAST:event_Gerente

    private void Caixa(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Caixa
        // TODO add your handling code here:
    }//GEN-LAST:event_Caixa

    private void Servente(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Servente
        // TODO add your handling code here:
    }//GEN-LAST:event_Servente

    private void jComboBoxCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCargoActionPerformed

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarActionPerformed
        //Lista de funcionarios registrados
        findyFuncionario();
        
    }//GEN-LAST:event_jButtonListarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
       int linha = jTableFuncionario.getSelectedRow();
        int codigoUser = (int) jTableFuncionario.getValueAt(linha, 0);
        if(controllerFuncionario.excluirCFuncionarioController(codigoUser)){
         JOptionPane.showMessageDialog (this, " Usuario excluido com sucesso "," Atencao ", JOptionPane.WARNING_MESSAGE); 
         this.carregarFuncionario();
        }else{
          JOptionPane.showMessageDialog (this, " Erro ao excluir o usuario "," Erro ", JOptionPane.ERROR_MESSAGE);   
        }
       
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed

       //Metodo para editar funcionario
        jTextFieldContactoP.setEnabled(true);
        jTextFieldMorada.setEnabled(true);
        jTextFieldNome.setEnabled(true);
        jButtonConfirmar.setEnabled(true);
        jComboBoxCargo.setEnabled(true);
        jComboBoxSexo.setEnabled(true);
        jButtonNovo.setEnabled(true);
        jButtonCanselar.setEnabled(true);
        jButtonEditar.setEnabled(false);
        
        int linha = jTableFuncionario.getSelectedRow();
        int codigo =  (int) jTableFuncionario.getValueAt(linha, 0);
        salvarAlterar = "Alterar";
        modelCFuncionario = controllerFuncionario.getCFuncionarioController(codigo);
        
        jTextFieldCOD.setText(String.valueOf(modelCFuncionario.getId()));
        jTextFieldNome.setText(modelCFuncionario.getNome());
        jComboBoxSexo.setSelectedItem(modelCFuncionario.getSexo());
        jComboBoxCargo.setSelectedItem(modelCFuncionario.getCargo());
        jTextFieldMorada.setText(modelCFuncionario.getMorada());
        jTextFieldContactoP.setText(String.valueOf(modelCFuncionario.getContactoP()));
        this.desabilitaHabilita(true);
    
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        //Metodo de cadastrar novo funcionario 
        this.desabilitaHabilita(true);
        this.limparCampos();
        salvarAlterar = "salvar";
        jButtonConfirmar.setEnabled(true);
        jButtonNovo.setEnabled(true);
        jButtonCanselar.setEnabled(true);
        jButtonEditar.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jButtonListar.setEnabled(true);
        jComboBoxSexo.setEnabled(true);
        jComboBoxCargo.setEnabled(true);
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonCanselarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCanselarActionPerformed
        TelaPrinc tela = new TelaPrinc();
        tela.setVisible(true);
        dispose();
            
    }//GEN-LAST:event_jButtonCanselarActionPerformed

    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed
       
        if(salvarAlterar.equals("salvar")){
        
        modelCFuncionario.setCargo(this.jComboBoxCargo.getSelectedItem().toString());
        modelCFuncionario.setNome(this.jTextFieldNome.getText());
        modelCFuncionario.setSexo(this.jComboBoxSexo.getSelectedItem().toString());
        modelCFuncionario.setMorada(this.jTextFieldMorada.getText());
        modelCFuncionario.setContactoP(Integer.parseInt(this.jTextFieldContactoP.getText()));
        
        if(controllerFuncionario.salvarCFuncionarioController(modelCFuncionario)>0){
            JOptionPane.showMessageDialog (this, " Dados gravados com sucesso "," Atencao ", JOptionPane.WARNING_MESSAGE); 
           //Carregar os Clientes
            carregarFuncionario();
            //this.desabilitaHabilita(true);
            //this.limparCampos();
           
        }else{
            JOptionPane.showMessageDialog (this, " Erro ao gravar os dados "," Erro ", JOptionPane.ERROR_MESSAGE);
        }
        }else{
        modelCFuncionario.setId(Integer.parseInt(this.jTextFieldCOD.getText()));
        modelCFuncionario.setCargo(this.jComboBoxCargo.getSelectedItem().toString());
        modelCFuncionario.setNome(this.jTextFieldNome.getText());
        modelCFuncionario.setSexo(this.jComboBoxSexo.getSelectedItem().toString());
        modelCFuncionario.setMorada(this.jTextFieldMorada.getText());
        modelCFuncionario.setContactoP(Integer.parseInt(this.jTextFieldContactoP.getText()));
        
        if(controllerFuncionario.atualizarCFuncionarioController(modelCFuncionario)){
           JOptionPane.showMessageDialog (this, " Dados alterados com sucesso "," Atencao ", JOptionPane.WARNING_MESSAGE);
            //Carregar os Clientes
            carregarFuncionario();
            //this.desabilitaHabilita(true);
            //this.limparCampos();
            
        }else{
            JOptionPane.showMessageDialog (this, " Erro ao alterar os dados "," Erro ", JOptionPane.ERROR_MESSAGE);
        }   
        }
      
        jTextFieldContactoP.setText("");
        jTextFieldMorada.setText("");
        jTextFieldNome.setText("");
        jComboBoxSexo.setEnabled(true);
        jComboBoxCargo.setEnabled(true);
        jTextFieldContactoP.setEnabled(true);
        jTextFieldMorada.setEnabled(true);
        jTextFieldNome.setEnabled(true);
        jButtonConfirmar.setEnabled(true);
       
        
    }//GEN-LAST:event_jButtonConfirmarActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        // Pesquisa atravez do nome
        //int chave=0;
        
        DefaultTableModel modelo = (DefaultTableModel) this.jTableFuncionario.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.jTableFuncionario.setRowSorter(classificador);
        String texto = jTextFieldPesquisar.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jTableFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFuncionarioMouseClicked
        // Metodo de selecionar o item gravado
        jButtonPesquisar.setEnabled(false);
        jTextFieldPesquisar.setEnabled(false);
        jTextFieldNome.setEnabled(false);
        jComboBoxSexo.setEnabled(false);
        jComboBoxCargo.setEnabled(false);
        jTextFieldMorada.setEnabled(false);
        jTextFieldContactoP.setEnabled(false);
        jButtonExcluir.setEnabled(true);
        jButtonEditar.setEnabled(true);
        jButtonListar.setEnabled(true);
        jTextFieldCOD.setEnabled(true);
        
    }//GEN-LAST:event_jTableFuncionarioMouseClicked

    private void jTextFieldContactoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContactoPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldContactoPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CFuncionarios().setVisible(true);
            }
        });
    }
    /**
     * Habilita ou desabilita os campos e botoes
     * @param condicao 
     */
    private void desabilitaHabilita(boolean condicao){
        jTextFieldNome.setEnabled(condicao);
        jComboBoxCargo.setEnabled(condicao);
        jComboBoxSexo.setEnabled(condicao);
        jTextFieldMorada.setEnabled(condicao);
        jTextFieldContactoP.setEnabled(condicao);
        jTextFieldPesquisar.setEnabled(condicao);
        jButtonConfirmar.setEnabled(condicao);
    }
    /**
     * Metodo de limpar os campos do formulario
     */
     private void limparCampos(){
        jTextFieldNome.setText("");
        jTextFieldMorada.setText("");
        jTextFieldContactoP.setText("");
        jTextFieldPesquisar.setText("");
       
    }
    
     private void carregarFuncionario(){
      listaModelCadastro = controllerFuncionario.getListaCFuncionarioController();
        DefaultTableModel modelo = (DefaultTableModel) jTableFuncionario.getModel();
        modelo.setNumRows(0);
        int cont = listaModelCadastro.size();
        for (int i = 0; i < cont; i++) {
          modelo.addRow(new Object[]{
              listaModelCadastro.get(i).getId(),
              listaModelCadastro.get(i).getNome(),
              listaModelCadastro.get(i).getSexo(),
              listaModelCadastro.get(i).getCargo(),
              listaModelCadastro.get(i).getMorada(),
              listaModelCadastro.get(i).getContactoP()
              
          });
        }

    }
     
     private void salvarFuncionario(){
         DefaultTableModel funcionarios = (DefaultTableModel) jTableFuncionario.getModel();
         Object[] dados = {jTextFieldCOD.getText(),jTextFieldNome.getText(),jTextFieldContactoP.getText(),jTextFieldMorada.getText()};
        funcionarios.addRow(dados);
        try {
        modelCFuncionario.setId(Integer.parseInt(jTextFieldCOD.getText()));
        } catch (NumberFormatException e) {
        }
        modelCFuncionario.setCargo((String) jComboBoxCargo.getSelectedItem());
        modelCFuncionario.setNome(jTextFieldNome.getText());
        modelCFuncionario.setSexo((String) jComboBoxSexo.getSelectedItem());
        modelCFuncionario.setMorada(jTextFieldMorada.getText());
        modelCFuncionario.setContactoP(Integer.parseInt(jTextFieldContactoP.getText()));
        
     }
    
    private void findyFuncionario(){
        listaModelCadastro = controllerFuncionario.getListaCFuncionarioController();
        DefaultTableModel modelo = (DefaultTableModel) jTableFuncionario.getModel();
        modelo.setNumRows(0);
        //Inserir prodotos na tabela
        int cont = listaModelCadastro.size() ;
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
            listaModelCadastro.get(i).getId(),
            listaModelCadastro.get(i).getNome(),
            listaModelCadastro.get(i).getSexo(),
            listaModelCadastro.get(i).getCargo(),
            listaModelCadastro.get(i).getMorada(),
            listaModelCadastro.get(i).getContactoP()
            });
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCanselar;
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonListar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JComboBox<String> jComboBoxCargo;
    private javax.swing.JComboBox<String> jComboBoxSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableFuncionario;
    private javax.swing.JTextField jTextFieldCOD;
    private javax.swing.JTextField jTextFieldContactoP;
    private javax.swing.JTextField jTextFieldMorada;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPesquisar;
    // End of variables declaration//GEN-END:variables
}
